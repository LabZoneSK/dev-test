{"version":3,"sources":["components/Header.tsx","components/Card.tsx","components/Footer.tsx","hooks/useFetch.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Card","id","title","linkToFlickPost","imageSrc","description","controls","useAnimation","useEffect","start","i","opacity","x","transition","delay","motion","article","className","custom","animate","src","alt","substr","href","Footer","useFetch","query","page","searchText","useState","loading","setLoading","error","setError","list","setList","text","setText","sendQuery","useCallback","a","console","log","axios","get","res","prev","data","photos","photo","App","setPage","setSearchText","loader","useRef","searchBar","handleObserver","entries","isIntersecting","observer","IntersectionObserver","root","rootMargin","threshold","current","observe","message","ref","placeholder","onClick","e","s","value","map","p","farm","server","secret","owner","_content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.845603f7.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1>Flick app</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport { IoArrowForward } from \"react-icons/io5\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\ninterface CardProps {\r\n  id: number;\r\n  title: string;\r\n  imageSrc: string;\r\n  linkToFlickPost: string;\r\n  description: string;\r\n}\r\n\r\nfunction Card({\r\n  id,\r\n  title,\r\n  linkToFlickPost,\r\n  imageSrc,\r\n  description,\r\n}: CardProps) {\r\n  const controls = useAnimation();\r\n\r\n  useEffect(() => {\r\n    controls.start((i) => ({\r\n      opacity: 1,\r\n      x: -30,\r\n      transition: { delay: i * 0.3 },\r\n    }));\r\n  }, [controls]);\r\n\r\n  return (\r\n    <motion.article className=\"card\" custom={id} animate={controls}>\r\n      <img src={imageSrc} alt={description} />\r\n      <div className=\"cardBody\">\r\n        <h3>{title}</h3>\r\n        <p>{description.substr(0, 150) + \"...\"}</p>\r\n      </div>\r\n      <div className=\"cardExploreBtn\">\r\n        <a href={linkToFlickPost}>\r\n          Explore <IoArrowForward />\r\n        </a>\r\n      </div>\r\n    </motion.article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <h2>Images from flickr</h2>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction useFetch(query: any, page: any, searchText: any = \"\") {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [list, setList] = useState<any>([]);\r\n  const [text, setText] = useState(\"\");\r\n  const sendQuery = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(false);\r\n      if (text !== searchText) {\r\n        console.log(\"jarrive ici\");\r\n        setText(searchText);\r\n        setList([]);\r\n      }\r\n      const res = await axios.get(query + page + text);\r\n\r\n      setList((prev: any) => [...prev, ...res.data.photos.photo]);\r\n      setLoading(false);\r\n    } catch (err: any) {\r\n      setError(err);\r\n    }\r\n  }, [query, page, searchText]);\r\n\r\n  useEffect(() => {\r\n    sendQuery();\r\n  }, [query, sendQuery, page]);\r\n\r\n  return { loading, error, list };\r\n}\r\n\r\nexport default useFetch;\r\n","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport \"./styles/global.css\";\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport Footer from \"./components/Footer\";\nimport useFetch from \"./hooks/useFetch\";\nimport { FcSearch } from \"react-icons/fc\";\n\nfunction App() {\n  const [query, setQuery] = useState(\n    \"https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=2a33dd08ea58d2c86ccb995df5f1cf6b&tags=nature&format=json&extras=description&nojsoncallback=1&per_page=10&page=\"\n  );\n  const [page, setPage] = useState(1);\n  const [searchText, setSearchText] = useState(\"\");\n  const { loading, error, list } = useFetch(query, page, searchText);\n  const loader = useRef(null);\n  const searchBar = useRef(null);\n  const handleChange = (e: any) => {\n    let s = searchBar.current as any;\n    console.log(s.value);\n    setPage(0);\n    setSearchText(\"&text=\" + s.value);\n  };\n\n  const handleObserver = useCallback((entries) => {\n    const target = entries[0];\n    if (target.isIntersecting) {\n      setPage((prev) => prev + 1);\n    }\n  }, []);\n\n  useEffect(() => {\n    const option = {\n      root: null,\n      rootMargin: \"20px\",\n      threshold: 0,\n    };\n    const observer = new IntersectionObserver(handleObserver, option);\n    if (loader.current) observer.observe(loader.current);\n  }, [handleObserver]);\n\n  if (error) {\n    // @ts-ignore\n    return <div>Error: {error!.message}</div>;\n  } else {\n    return (\n      <div className=\"App\">\n        <Header />\n\n        <main>\n          <div className=\"searchbar\">\n            <input\n              ref={searchBar}\n              placeholder=\"Write here what you want to search as images ..\"\n            />{\" \"}\n            <button onClick={handleChange}>\n              {\" \"}\n              <FcSearch />\n            </button>\n          </div>\n          {list.map((p: any, i: any) => {\n            return (\n              <Card\n                key={i}\n                id={i}\n                imageSrc={\n                  \"https://farm\" +\n                  p.farm +\n                  \".staticflickr.com/\" +\n                  p.server +\n                  \"/\" +\n                  p.id +\n                  \"_\" +\n                  p.secret +\n                  \".jpg\"\n                }\n                linkToFlickPost={\n                  \"https://www.flickr.com/photos/\" + p.owner + \"/\" + p.id\n                }\n                title={p.title}\n                description={p.description._content}\n              />\n            );\n          })}\n          <div ref={loader} />\n          {loading && (\n            <>\n              <br />\n              <div className=\"loader\">Loading...</div>\n            </>\n          )}\n          {error && <p>Error!</p>}\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}