{"version":3,"sources":["components/Header.tsx","components/Card.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Card","title","linkToFlickPost","imageSrc","description","article","className","animate","x","transition","ease","duration","src","alt","substr","href","Footer","App","useState","error","setError","isLoaded","setIsLoaded","images","setImages","useEffect","axios","get","then","result","data","message","photos","photo","map","p","farm","server","id","secret","owner","_content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPASeA,MARf,WACE,OACE,iCACE,8C,gBC6BSC,MAvBf,YAA6E,IAA7DC,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,gBAAiBC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,YAGhD,OACE,eAAC,IAAEC,QAAH,CACEC,UAAU,OACVC,QAAS,CAAEC,EAAG,KACdC,WAAY,CAAEC,KAAM,UAAWC,SAAU,IAH3C,UAKE,qBAAKC,IAAKT,EAAUU,IAAKT,IACzB,sBAAKE,UAAU,WAAf,UACE,6BAAKL,IACL,4BAAIG,EAAYU,OAAO,EAAG,KAAO,WAEnC,qBAAKR,UAAU,iBAAf,SACE,oBAAGS,KAAMb,EAAT,qBACU,cAAC,IAAD,aCjBHc,MARf,WACE,OACE,iCACE,uDC+FSC,MAnEf,WAAgB,IAAD,EACaC,mBAAS,MADtB,mBACNC,EADM,KACCC,EADD,OAEmBF,oBAAS,GAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAIeJ,mBAAmC,IAJlD,mBAINK,EAJM,KAIEC,EAJF,KA0Bb,OApBAC,qBAAU,WACRC,IACGC,IACC,0MAEDC,MACC,SAACC,GACCP,GAAY,GACZE,EAAUK,EAAOC,SAKnB,SAACX,GACCG,GAAY,GACZF,EAASD,QAGd,IAECA,EAEK,0CAAaA,EAAOY,WAGzB,sBAAKzB,UAAU,MAAf,UACE,cAAC,EAAD,KACEe,GAAY,6CACd,+BACGA,GACCE,EAAOS,QACPT,EAAOS,OAAQC,MAAMC,KAAI,SAACC,GACxB,OACE,cAAC,EAAD,CAEEhC,SACE,eACAgC,EAAEC,KACF,qBACAD,EAAEE,OACF,IACAF,EAAEG,GACF,IACAH,EAAEI,OACF,OAEFrC,gBACE,iCAAmCiC,EAAEK,MAAQ,IAAML,EAAEG,GAEvDrC,MAAOkC,EAAElC,MACTG,YAAa+B,EAAE/B,YAAYqC,UAhBtBN,EAAEG,SAqBjB,cAAC,EAAD,QC/EOI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4c812dcf.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1>Flick app</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { IoArrowForward } from \"react-icons/io5\";\r\nimport { m } from \"framer-motion\";\r\n\r\ninterface CardProps {\r\n  title: string;\r\n  imageSrc: string;\r\n  linkToFlickPost: string;\r\n  description: string;\r\n}\r\nfunction Card({ title, linkToFlickPost, imageSrc, description }: CardProps) {\r\n  //https://farm{farm-id}.staticflickr.com/{server-id}/{id}_{secret}.jpg\r\n\r\n  return (\r\n    <m.article\r\n      className=\"card\"\r\n      animate={{ x: 100 }}\r\n      transition={{ ease: \"easeOut\", duration: 10 }}\r\n    >\r\n      <img src={imageSrc} alt={description} />\r\n      <div className=\"cardBody\">\r\n        <h3>{title}</h3>\r\n        <p>{description.substr(0, 150) + \"...\"}</p>\r\n      </div>\r\n      <div className=\"cardExploreBtn\">\r\n        <a href={linkToFlickPost}>\r\n          Explore <IoArrowForward />\r\n        </a>\r\n      </div>\r\n    </m.article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <h2>Images from flickr</h2>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles/global.css\";\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport Footer from \"./components/Footer\";\ninterface FlickerResponse {\n  photos: {\n    page: number;\n    pages: number;\n    perpage: number;\n    total: number;\n    photo: {\n      id: string;\n      owner: string;\n      secret: string;\n      server: string;\n      farm: number;\n      title: string;\n      ispublic: number;\n      isfriend: number;\n      isfamily: number;\n      is_primary: number;\n      has_comment: number;\n      description: {\n        _content: string;\n      };\n    }[];\n  };\n  stat: string;\n}\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  // @ts-ignore\n  const [images, setImages] = useState<Partial<FlickerResponse>>([]);\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://www.flickr.com/services/rest/?method=flickr.galleries.getPhotos&api_key=2a33dd08ea58d2c86ccb995df5f1cf6b&gallery_id=66911286-72157647277042064&format=json&extras=description&nojsoncallback=1\"\n      )\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setImages(result.data);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  if (error) {\n    // @ts-ignore\n    return <div>Error: {error!.message}</div>;\n  } else {\n    return (\n      <div className=\"App\">\n        <Header />\n        {!isLoaded && <div>Loading...</div>}\n        <main>\n          {isLoaded &&\n            images.photos &&\n            images.photos!.photo.map((p) => {\n              return (\n                <Card\n                  key={p.id}\n                  imageSrc={\n                    \"https://farm\" +\n                    p.farm +\n                    \".staticflickr.com/\" +\n                    p.server +\n                    \"/\" +\n                    p.id +\n                    \"_\" +\n                    p.secret +\n                    \".jpg\"\n                  }\n                  linkToFlickPost={\n                    \"https://www.flickr.com/photos/\" + p.owner + \"/\" + p.id\n                  }\n                  title={p.title}\n                  description={p.description._content}\n                />\n              );\n            })}\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}