{"version":3,"sources":["components/Header.tsx","components/Card.tsx","components/Footer.tsx","hooks/useFetch.ts","components/Search.tsx","App.tsx","index.tsx"],"names":["Header","Card","id","title","linkToFlickPost","imageSrc","description","controls","useAnimation","useEffect","start","i","opacity","x","transition","delay","motion","article","className","custom","animate","href","src","alt","substr","Footer","useFetch","query","page","searchText","useState","loading","setLoading","error","setError","list","setList","text","setText","sendQuery","useCallback","a","axios","get","res","prev","data","photos","photo","Search","searchBar","handleChange","ChangeSearchType","name","onChange","value","ref","placeholder","onClick","App","setPage","setSearchText","loader","useRef","showButton","setShowButton","searchType","setSearchType","window","addEventListener","pageYOffset","handleObserver","entries","isIntersecting","observer","IntersectionObserver","root","rootMargin","threshold","current","observe","message","e","s","target","map","p","farm","server","secret","owner","_content","SpinnerDotted","enabled","scrollTo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOASeA,MARf,WACE,OACE,iCACE,4D,wBC4CSC,MApCf,YAMe,IALbC,EAKY,EALZA,GACAC,EAIY,EAJZA,MACAC,EAGY,EAHZA,gBACAC,EAEY,EAFZA,SACAC,EACY,EADZA,YAEMC,EAAWC,cAUjB,OARAC,qBAAU,WACRF,EAASG,OAAM,SAACC,GAAD,MAAQ,CACrBC,QAAS,EACTC,GAAI,GACJC,WAAY,CAAEC,MAAW,GAAJJ,SAEtB,CAACJ,IAGF,eAACS,EAAA,EAAOC,QAAR,CAAgBC,UAAU,OAAOC,OAAQjB,EAAIkB,QAASb,EAAtD,UACE,mBAAGc,KAAMjB,EAAT,SACE,qBAAKkB,IAAKjB,EAAUkB,IAAKjB,MAG3B,sBAAKY,UAAU,WAAf,UACE,6BAAKf,IACL,4BAAIG,EAAYkB,OAAO,EAAG,KAAO,WAEnC,qBAAKN,UAAU,iBAAf,SACE,oBAAGG,KAAMjB,EAAT,qBACU,cAAC,IAAD,aChCHqB,MARf,WACE,OACE,iCACE,qE,kDC6BSC,MA9Bf,SAAkBC,EAAYC,GAAkC,IAAvBC,EAAsB,uDAAJ,GAAI,EAC/BC,oBAAS,GADsB,mBACtDC,EADsD,KAC7CC,EAD6C,OAEnCF,oBAAS,GAF0B,mBAEtDG,EAFsD,KAE/CC,EAF+C,OAGrCJ,mBAAc,IAHuB,mBAGtDK,EAHsD,KAGhDC,EAHgD,OAIrCN,mBAAS,IAJ4B,mBAItDO,EAJsD,KAIhDC,EAJgD,KAKvDC,EAAYC,sBAAW,sBAAC,4BAAAC,EAAA,sEAE1BT,GAAW,GACXE,GAAS,GACLG,IAASR,IACXS,EAAQT,GACRO,EAAQ,KANgB,SAQRM,IAAMC,IAAIhB,EAAQC,EAAOS,GARjB,OAQpBO,EARoB,OAW1BR,GAAQ,SAACS,GAAD,4BAAmBA,GAAnB,YAA4BD,EAAIE,KAAKC,OAAOC,WACpDhB,GAAW,GAZe,kDAc1BE,EAAS,EAAD,IAdkB,0DAgB3B,CAACP,EAAOC,EAAMC,IAMjB,OAJApB,qBAAU,WACR8B,MACC,CAACZ,EAAOY,EAAWX,IAEf,CAAEG,UAASE,QAAOE,S,gBCTZc,MAnBf,YAAqE,IAAnDC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,iBACzC,OACE,sBAAKlC,UAAU,YAAf,UACE,yBAAQmC,KAAK,eAAeC,SAAUF,EAAtC,UACE,wBAAQG,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,oBAEF,uBACEC,IAAKN,EACLO,YAAY,oDACX,IACH,yBAAQC,QAASP,EAAjB,UACG,IACD,cAAC,IAAD,WCwGOQ,MA/Gf,WAAgB,IAAD,EACa7B,mBACxB,4LAFW,mBACNH,EADM,aAIWG,mBAAS,IAJpB,mBAINF,EAJM,KAIAgC,EAJA,OAKuB9B,mBAAS,IALhC,mBAKND,EALM,KAKMgC,EALN,OAMoBnC,EAASC,EAAOC,EAAMC,GAA/CE,EANK,EAMLA,QAASE,EANJ,EAMIA,MAAOE,EANX,EAMWA,KAClB2B,EAASC,iBAAY,MACrBb,EAAYa,iBAAO,MARZ,EASuBjC,oBAAS,GAThC,mBASNkC,EATM,KASMC,EATN,OAUuBnC,mBAAS,QAVhC,mBAUNoC,EAVM,KAUMC,EAVN,KAWb1D,qBAAU,WACR2D,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,YAAc,IACvBL,GAAc,GAEdA,GAAc,QAGjB,IAGH,IAYMM,EAAiB/B,uBAAY,SAACgC,GACnBA,EAAQ,GACZC,gBACTb,GAAQ,SAACf,GAAD,OAAUA,EAAO,OAE1B,IAYH,OAVApC,qBAAU,WACR,IAKMiE,EAAW,IAAIC,qBAAqBJ,EAL3B,CACbK,KAAM,KACNC,WAAY,OACZC,UAAW,IAGThB,EAAOiB,SAASL,EAASM,QAAQlB,EAAOiB,WAC3C,CAACR,IAEAtC,EAEK,0CAAaA,EAAOgD,WAGzB,sBAAK/D,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,iCACE,cAAC,EAAD,CACEgC,UAAWA,EACXC,aApCW,SAAC+B,GACpB,IAAIC,EAAIjC,EAAU6B,QAClBnB,EAAQ,GACRC,EAAc,IAAMK,EAAa,IAAMiB,EAAE5B,QAkCjCH,iBAhCe,SAAC8B,GACxBf,EAAce,EAAEE,OAAO7B,UAiChBpB,EAAKkD,KAAI,SAACC,EAAQ3E,GACjB,OACE,cAAC,EAAD,CAEET,GAAIS,EACJN,SACE,eACAiF,EAAEC,KACF,qBACAD,EAAEE,OACF,IACAF,EAAEpF,GACF,IACAoF,EAAEG,OACF,OAEFrF,gBACE,iCAAmCkF,EAAEI,MAAQ,IAAMJ,EAAEpF,GAEvDC,MAAOmF,EAAEnF,MACTG,YAAagF,EAAEhF,YAAYqF,UAjBtBhF,MAqBX,qBAAK6C,IAAKM,IACT/B,GACC,qCACE,uBACA,qBAAKb,UAAU,SAAf,SACE,cAAC0E,EAAA,EAAD,CAAeC,SAAS,SAI7B5D,GAAS,0CAEX+B,GACC,wBAAQN,QA/EI,WAClBU,OAAO0B,SAAS,EAAG,IA8EiB5E,UAAU,cAAxC,oBAIF,cAAC,EAAD,QC5GR6E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ccb88307.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1> ðŸ“· Flick app</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport { IoArrowForward } from \"react-icons/io5\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\ninterface CardProps {\r\n  id: number;\r\n  title: string;\r\n  imageSrc: string;\r\n  linkToFlickPost: string;\r\n  description: string;\r\n}\r\n\r\nfunction Card({\r\n  id,\r\n  title,\r\n  linkToFlickPost,\r\n  imageSrc,\r\n  description,\r\n}: CardProps) {\r\n  const controls = useAnimation();\r\n\r\n  useEffect(() => {\r\n    controls.start((i) => ({\r\n      opacity: 1,\r\n      x: -30,\r\n      transition: { delay: i * 0.3 },\r\n    }));\r\n  }, [controls]);\r\n\r\n  return (\r\n    <motion.article className=\"card\" custom={id} animate={controls}>\r\n      <a href={linkToFlickPost}>\r\n        <img src={imageSrc} alt={description} />\r\n      </a>\r\n\r\n      <div className=\"cardBody\">\r\n        <h3>{title}</h3>\r\n        <p>{description.substr(0, 150) + \"...\"}</p>\r\n      </div>\r\n      <div className=\"cardExploreBtn\">\r\n        <a href={linkToFlickPost}>\r\n          Explore <IoArrowForward />\r\n        </a>\r\n      </div>\r\n    </motion.article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <h2>âœ¨ Images from flickr âœ¨</h2>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction useFetch(query: any, page: any, searchText: any = \"\") {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [list, setList] = useState<any>([]);\r\n  const [text, setText] = useState(\"\");\r\n  const sendQuery = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(false);\r\n      if (text !== searchText) {\r\n        setText(searchText);\r\n        setList([]);\r\n      }\r\n      const res = await axios.get(query + page + text);\r\n      //   await new Promise((r) => setTimeout(r, 20000));\r\n\r\n      setList((prev: any) => [...prev, ...res.data.photos.photo]);\r\n      setLoading(false);\r\n    } catch (err: any) {\r\n      setError(err);\r\n    }\r\n  }, [query, page, searchText]);\r\n\r\n  useEffect(() => {\r\n    sendQuery();\r\n  }, [query, sendQuery, page]);\r\n\r\n  return { loading, error, list };\r\n}\r\n\r\nexport default useFetch;\r\n","import { FcSearch } from \"react-icons/fc\";\r\n\r\nfunction Search({ searchBar, handleChange, ChangeSearchType }: any) {\r\n  return (\r\n    <div className=\"searchbar\">\r\n      <select name=\"typeOfSearch\" onChange={ChangeSearchType}>\r\n        <option value=\"text\">Text</option>\r\n        <option value=\"tags\">Tag</option>\r\n      </select>\r\n      <input\r\n        ref={searchBar}\r\n        placeholder=\"Write here what you want to search as images ..\"\r\n      />{\" \"}\r\n      <button onClick={handleChange}>\r\n        {\" \"}\r\n        <FcSearch />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport \"./styles/global.css\";\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport Footer from \"./components/Footer\";\nimport useFetch from \"./hooks/useFetch\";\nimport { SpinnerDotted } from \"spinners-react\";\nimport Search from \"./components/Search\";\nfunction App() {\n  const [query, setQuery] = useState(\n    \"https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=2a33dd08ea58d2c86ccb995df5f1cf6b&tags=nature&format=json&extras=description&nojsoncallback=1&per_page=10&page=\"\n  );\n  const [page, setPage] = useState(1);\n  const [searchText, setSearchText] = useState(\"\");\n  const { loading, error, list } = useFetch(query, page, searchText);\n  const loader = useRef<any>(null);\n  const searchBar = useRef(null);\n  const [showButton, setShowButton] = useState(false);\n  const [searchType, setSearchType] = useState(\"text\");\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.pageYOffset > 300) {\n        setShowButton(true);\n      } else {\n        setShowButton(false);\n      }\n    });\n  }, []);\n\n  // This function will scroll the window to the top\n  const scrollToTop = () => {\n    window.scrollTo(0, 0);\n  };\n\n  const handleChange = (e: any) => {\n    let s = searchBar.current as any;\n    setPage(0);\n    setSearchText(\"&\" + searchType + \"=\" + s.value);\n  };\n  const ChangeSearchType = (e: any) => {\n    setSearchType(e.target.value);\n  };\n  const handleObserver = useCallback((entries) => {\n    const target = entries[0];\n    if (target.isIntersecting) {\n      setPage((prev) => prev + 1);\n    }\n  }, []);\n\n  useEffect(() => {\n    const option = {\n      root: null,\n      rootMargin: \"20px\",\n      threshold: 0,\n    };\n    const observer = new IntersectionObserver(handleObserver, option);\n    if (loader.current) observer.observe(loader.current);\n  }, [handleObserver]);\n\n  if (error) {\n    // @ts-ignore\n    return <div>Error: {error!.message}</div>;\n  } else {\n    return (\n      <div className=\"App\">\n        <Header />\n\n        <main>\n          <Search\n            searchBar={searchBar}\n            handleChange={handleChange}\n            ChangeSearchType={ChangeSearchType}\n          />\n          {list.map((p: any, i: any) => {\n            return (\n              <Card\n                key={i}\n                id={i}\n                imageSrc={\n                  \"https://farm\" +\n                  p.farm +\n                  \".staticflickr.com/\" +\n                  p.server +\n                  \"/\" +\n                  p.id +\n                  \"_\" +\n                  p.secret +\n                  \".jpg\"\n                }\n                linkToFlickPost={\n                  \"https://www.flickr.com/photos/\" + p.owner + \"/\" + p.id\n                }\n                title={p.title}\n                description={p.description._content}\n              />\n            );\n          })}\n          <div ref={loader} />\n          {loading && (\n            <>\n              <br />\n              <div className=\"loader\">\n                <SpinnerDotted enabled={true} />\n              </div>\n            </>\n          )}\n          {error && <p>Error!</p>}\n        </main>\n        {showButton && (\n          <button onClick={scrollToTop} className=\"back-to-top\">\n            &#8679;\n          </button>\n        )}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}